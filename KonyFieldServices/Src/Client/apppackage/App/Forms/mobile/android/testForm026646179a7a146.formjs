function addWidgetstestForm026646179a7a146() {
    testForm026646179a7a146.add();
};

function testForm026646179a7a146Globals() {
    testForm026646179a7a146 = new kony.ui.Form2({
        "id": "testForm026646179a7a146",
        "type": constants.FORM_TYPE_NATIVE,
        "title": null,
        "skin": "slForm",
        "needAppMenu": true,
        "enabledForIdleTimeout": false,
        "addWidgets": addWidgetstestForm026646179a7a146,
        "init": null,
        "preShow": null,
        "postShow": null,
        "onHide": null,
        "onOrientationChange": null,
        "onDestroy": null,
        "onScrollStart": null,
        "onScrollTouchReleased": null,
        "onScrolling": null,
        "onDecelerationStarted": null,
        "onScrollEnd": null,
        "layoutType": kony.flex.FREE_FORM
    }, {
        "displayOrientation": constants.FORM_DISPLAY_ORIENTATION_PORTRAIT,
        "padding": [0, 0, 0, 0],
        "paddingInPixel": false,
        "layoutType": kony.flex.FREE_FORM
    }, {
        "titleBar": true,
        "titleBarSkin": "slTitleBar",
        "menuPosition": constants.FORM_MENU_POSITION_AFTER_APPMENU,
        "windowSoftInputMode": constants.FORM_ADJUST_RESIZE,
        "onDeviceBack": null,
        "onDeviceMenu": null,
        "footerOverlap": false,
        "headerOverlap": false,
        "retainScrollPosition": false
    });
    testForm026646179a7a146.info = {
        "kuid": "4b66d28708b44ab7a7e356ee7584d5c0"
    };
    testForm026646179a7a146.setDefaultUnit(kony.flex.DP);
};